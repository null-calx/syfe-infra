worker_processes  1;

# error_log logs/error.log;

events {
    worker_connections 1024;
}

http {
    access_log /dev/stdout;
    error_log /dev/stderr;

    lua_shared_dict prometheus_metrics 100M;
    lua_package_path "/opt/lualib/?.lua;;";

    init_worker_by_lua_block {
        prometheus = require("prometheus").init("prometheus_metrics");

        metric_requests = prometheus:counter("nginx_http_requests_total", "Number of HTTP requests", {"host", "status"});
        metric_latency = prometheus:histogram("nginx_http_request_duration_seconds", "HTTP request latency", {"host"});
        metric_connections = prometheus:gauge("nginx_http_connections", "Number of HTTP connections", {"state"});
    }

    log_by_lua_block {
        metric_requests:inc(1, {ngx.var.server_name, ngx.var.status});
        metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name});
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://wordpress:80;
            proxy_set_header Host $host;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }

        error_page 400 401 402 403 404 /40x.html;
        location = /40x.html {
            root html;
        }
    }

    server {
        listen 8080;
        location /metrics {
            content_by_lua_block {
                metric_connections:set(ngx.var.connections_reading, {"reading"});
                metric_connections:set(ngx.var.connections_waiting, {"waiting"});
                metric_connections:set(ngx.var.connections_writing, {"writing"});
                prometheus:collect();
            }
        }
    }
}
